//! ------------ METADEFINITION -------------

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../graphql/@generated"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
  reExport               = "Single"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//! ---------------- ACCOUNTS ---------------

model User {
  //? User Attributes

  /// @Validator.IsEmail()
  /// @Validator.MaxLength(50)
  email      String   @unique
  /// @HideField({ input: true })
  isVerified Boolean  @default(false)
  /// @Validator.Length(3, 50)
  /// @Validator.IsOptional()
  username   String?  @unique
  /// @Validator.IsOptional()
  /// @HideField({ input: true })
  avatar     String?
  /// @Validator.IsJSON()
  /// @Validator.MaxLength(500)
  /// @Validator.IsOptional()
  payload    Json?
  /// @HideField()
  /// @Validator.Length(10, 50)
  password   String
  /// @HideField({ input: true, output: true })
  tokens     String[] @default([])

  //? User Metadata

  /// @HideField({ input: true })
  id        String   @id @default(uuid())
  /// @HideField({ input: true })
  createdAt DateTime @default(now())
  /// @HideField({ input: true })
  updatedAt DateTime @default(now())
}
