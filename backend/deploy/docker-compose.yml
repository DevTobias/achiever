version: '3'

services:
  postgres:
    image: postgres:alpine
    restart: unless-stopped
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    environment:
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB}
    networks:
      - trophy-service
    volumes:
      - postgres:/data/postgres

  cache:
    image: trophoria/trophoria-cache:latest
    restart: unless-stopped
    privileged: true
    command: sh init-redis.sh ${CACHE_PASSWORD}
    ports:
      - '${CACHE_PORT}:${CACHE_PORT}'
    networks:
      - trophy-service
    volumes:
      - redis:/data/redis

  api:
    image: trophoria/trophoria-api:latest
    restart: unless-stopped
    environment:
      DATABASE_URL: ${DATABASE_URL}
      CACHE_PASSWORD: ${CACHE_PASSWORD}
      CACHE_PORT: ${CACHE_PORT}
      CACHE_TTL: ${CACHE_TTL}
      CACHE_HOST: ${CACHE_HOST}
      PORT: ${PORT}
    ports:
      - '${API_PORT}:${API_PORT}'
    networks:
      - trophy-service
    depends_on:
      - cache
      - postgres

  object-storage:
    image: minio/minio
    restart: unless-stopped
    ports:
      - '${MINIO_PORT}:${MINIO_PORT}'
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data
    networks:
      - trophy-service
    volumes:
      - minio:/data/minio

volumes:
  postgres:
  redis:
  minio:

networks:
  trophy-service:
    driver: bridge
